!EvalModel
parameters: [b_xx, b_yy, b_zz, b_xy, b_yz, b_xz, ShapeNucleation]
model: !Switch
  [b_xx, b_yy, b_zz, b_xy, b_yz, b_xz]: !EvalModel
    parameters: [S, sig_zz]
    model: !FunctionMap
      map: 
	    # (rho*-rho_wasser?)*9.8*z ´; Tiefe Bruch
        sig_zz: |
          return -2670.0*(1.0-0.37)*9.8*29000; 
        #(2.0 damit hier Bruch als erstes passiert)
        S: |
          R = 4.0;								
          return (1.0/R-1.0);
    components: !AndersonianStress
      constants:
        mu_d:      0.1
        mu_s:      0.6
        #strike alpha means Shmax=alpha+30
        SH_max:   132.0
        cohesion:  0.0
        #s2ratio<0.5 induces transpression, else transtension
        s2ratio:   0.5
        S_v: 1
  [ShapeNucleation]: !FunctionMap
            map:
              #xc = 933199;
              # yc = 7492140;
              #zc = -29000;
		      #Maximale Radius der Nukleation, vielleicht größer machen damit mehr Bumms ist am Anfang
              #removed: 9.4e5 7.49e6
              ShapeNucleation: |
                xc = -6764.741143;
                yc= 2113.182742;
                zc=-28966.653212;		
                r_crit = 1000.0;
                r = sqrt(pow(x-xc, 2.0) + pow(y-yc, 2.0) + pow(z-zc, 2.0));
                if (r < r_crit) {
                  return exp(pow(r,2.0)/(pow(r,2.0)-pow(r_crit,2.0)));
                }
                return 0.0;
components: !FunctionMap
  map:
    nuc_xx:     return ShapeNucleation*b_xx;
    nuc_yy:     return ShapeNucleation*b_yy;
    nuc_zz:     return ShapeNucleation*b_zz;
    nuc_xy:     return ShapeNucleation*b_xy;
    nuc_yz:     return ShapeNucleation*b_yz;
    nuc_xz:     return ShapeNucleation*b_xz;
